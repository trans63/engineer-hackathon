{"version":3,"sources":["../server/server.js"],"names":["PORT","process","env","notifier","poll","test","request","path","params","id","use","param","then","result","console","log","Promise","reject","statusCode","message","resolve","app","json","static","join","__dirname","get","req","res","sendFile","server","createServer","listen"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;AAEA,IAAMA,OAAOC,QAAQC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;;AAEA,IAAMG,WAAW,wBAAjB;;AAEA,uBACE,MADF,EAEE,UAACC,IAAD,EAAU;AACR;AACAD,WAASE,IAAT,CAAc,UAACC,OAAD,EAAa;AACzB;AACA,QAAIA,QAAQC,IAAR,KAAiB,eAAjB,IAAoCD,QAAQE,MAAR,CAAeC,EAAf,KAAsBL,KAAKK,EAAnE,EAAuE;AACrE,aAAO,KAAP;AACD;AACD,WAAO,IAAP;AACD,GAND;AAOD,CAXH;;AAcAN,SAASO,GAAT,CAAa,WAAb,EAA0B;AAAA,SAAM,qBAAN;AAAA,CAA1B;AACAP,SAASO,GAAT,CAAa,eAAb,EAA8B;AAAA,SAC5B,mBAAQC,MAAMF,EAAd,EAAkBG,IAAlB,CAAuB,UAACC,MAAD,EAAY;AACjCC,YAAQC,GAAR,CAAY,aAAZ;AACA,QAAI,CAACF,OAAOT,IAAZ,EAAkB;AAChB,aAAOY,QAAQC,MAAR,CAAe,EAAEC,YAAY,GAAd,EAAmBC,SAAS,WAA5B,EAAf,CAAP;AACD;AACD,WAAOH,QAAQI,OAAR,CAAgBP,MAAhB,CAAP;AACD,GAND,CAD4B;AAAA,CAA9B;;AAUA,IAAMQ,MAAM,yBACTX,GADS,CACL,4BADK,EAETA,GAFS,CAEL,6BAFK,EAGTA,GAHS,CAGL,sBAAO,MAAP,CAHK,EAITA,GAJS,CAIL,qBAAWY,IAAX,EAJK,CAAZ;;AAMA;AACAD,IAAIX,GAAJ,CAAQ,MAAR;;AAEA;AACAW,IAAIX,GAAJ,CAAQ,GAAR,EAAa,kBAAQa,MAAR,CAAe,eAAKC,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAf,CAAb;AACAJ,IAAIK,GAAJ,CAAQ,IAAR,EAAc,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1BA,MAAIC,QAAJ,CAAa,eAAKT,OAAL,CAAa,eAAKI,IAAL,CAAUC,SAAV,EAAqB,qBAArB,CAAb,CAAb;AACD,CAFD;;AAIA,IAAMK,SAAS,eAAKC,YAAL,CAAkBV,GAAlB,CAAf;AACAS,OAAOE,MAAP,CAAchC,IAAd;AACAG,SAAS6B,MAAT,CAAgBF,MAAhB;;AAEAhB,QAAQC,GAAR,yCAAkDf,IAAlD","file":"server.js","sourcesContent":["import compression from 'compression';\nimport express from 'express';\nimport http from 'http';\nimport morgan from 'morgan';\nimport bodyParser from 'body-parser';\nimport cookieParser from 'cookie-parser';\nimport path from 'path';\nimport api from './api';\nimport { addNotifier, getPolls, getPoll } from './data';\nimport Notifier from './notifier';\n\nconst PORT = process.env.PORT || 8102;\n\nconst notifier = new Notifier();\n\naddNotifier(\n  'poll',\n  (poll) => {\n    // this can be invoked multiple times as new requests happen\n    notifier.test((request) => {\n      // we should skip notify if the id of the poll does not match the payload\n      if (request.path === '/api/poll/:id' && request.params.id !== poll.id) {\n        return false;\n      }\n      return true;\n    });\n  }\n);\n\nnotifier.use('/api/poll', () => getPolls());\nnotifier.use('/api/poll/:id', param => (\n  getPoll(param.id).then((result) => {\n    console.log('polled poll')\n    if (!result.poll) {\n      return Promise.reject({ statusCode: 404, message: 'Not Found' });\n    }\n    return Promise.resolve(result);\n  })\n));\n\nconst app = express()\n  .use(compression())\n  .use(cookieParser())\n  .use(morgan('tiny'))\n  .use(bodyParser.json());\n\n// REST API\napp.use('/api', api);\n\n// UI\napp.use('/', express.static(path.join(__dirname, '/../dist')));\napp.get('/*', (req, res) => {\n  res.sendFile(path.resolve(path.join(__dirname, '/../dist/index.html')));\n});\n\nconst server = http.createServer(app);\nserver.listen(PORT);\nnotifier.listen(server);\n\nconsole.log(`Server started at http://localhost:${PORT}`);\n"]}